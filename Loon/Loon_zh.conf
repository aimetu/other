# 2024.09.01
# 配置参考：https://loon0x00.github.io/LoonManual
# 官网：https://nsloon.app
# 文档：https://nsloon.app/docs/intro

# 各个模块说明「基于 loon 3.2.2 制作」
# 注意：去掉前面的注释符号 "#" 该行生效，（开启关闭参数：true/false）
# 规则逻辑：排在前面的优先级高于后面的，本地规则 > 插件规则 > 订阅规则

# other 设置补充说明
# 自定义 geoip & ipasn 数据库
# https://github.com/Hackl0us/GeoIP2-CN
# https://github.com/Loyalsoldier/geoip

# 图标订阅「更多 -ui 配置 - 图标集」
# aimetu 108*108 图标
# https://raw.githubusercontent.com/aimetu/icons/main/icons.json

# http 本地服务器「浏览器打开」
# boxjs 订阅脚本挂载 substore 本地订阅转换
# http://boxjs.com
# https://sub.store

# boxjs 订阅脚本
# https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/box.js.json
# https://raw.githubusercontent.com/evilbutcher/Quantumult_X/master/evilbutcher.boxjs.json
# https://qxnav.com/rules/QuantumultX/qixin.boxjs.json
# https://raw.githubusercontent.com/xream/scripts/main/boxjs/boxjs.json

# 网络连通性检查使用的 url
# http://www.google.com/generate_204
# http://www.gstatic.com/generate_204
# http://www.qualcomm.cn/generate_204
# http://cp.cloudflare.com/generate_204
# http://captive.apple.com/generate_204

# 💡 通用设置
[General]
# 网络 ip 模式（ ipv4-only：ipv4仅有, auto：自动, ipv4-preferred：ipv4优先, ipv6-preferred：ipv6优先 ）
ip-mode = auto

# 网络接口模式 ( auto：系统分配、cellular：强制蜂窝、performance：最优网络、balance：负载均衡 )
interface-mode = auto

# 跳过代理或者 ip 段，不经过代理
skip-proxy = 10.0.0.0/8, 17.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16

# 指定 ip 段范围绕过 tun 旁路由
bypass-tun = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32

# 配置的域名不会使用 fakeip 进行映射，返回真实的 ip
real-ip = *.lan, *.local, localhost, *.msftncsi.com, *.msftconnecttest.com, cable.auth.com, captive.apple.com, *.cmpassport.com, id6.me, open.e.189.cn, auth.wosms.cn, mdn.open.wo.cn, opencloud.wostore.cn, enrichgw.10010.com, localhost.*.qq.com, localhost.*.weixin.qq.com

# 资源解析器连接
resource-parser =  https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-parser.loon.min.js

# 指定 url 进行网络连接检测
internet-test-url = http://www.qualcomm.cn/generate_204

# 指定 url 进行代理连接检测
proxy-test-url = http://www.gstatic.com/generate_204

# 节点测速时的超时 "秒" 数
test-timeout = 3

# 连续失败几次后进行节点切换
switch-node-after-failure-times = 3

# 是否开启局域网代理访问
allow-wifi-access = false

# 开启局域网 http 代理服务端口
wifi-access-http-port = 7222

# 开启局域网 socket5 代理服务端口
wifi-access-socket5-port = 7221

# 域名拦截时机 DNS、Request 二种方式，DNS：通过 dns-reject-mode 拦截请求的目的，Request：在请求阶段拦截请求
domain-reject-phase = DNS

# 域名拦截时机为 DNS 请示时三种方式：LoopbackIP：返回回环地址，NoAnswer: 返回空的 DNS 响应，NXDomain：返回域名无记录的异常代码
dns-reject-mode = LoopbackIP

# sni 域名嗅探
sni-sniffing = true

# stun 协议的 udp 数据，可以有效解决 webrtc 的 ip 泄露
disable-stun = true

# 当规则匹配的策略不支持 udp 中继时，使用以下策略进行 udp 数据转发
udp-fallback-mode = REJECT

# tun 模式下默认只解析 80 端口的 http 请求（8080 表示解析所有 8080 端口，0 表示解析所有端口），如请求的不是 80 端口，则可以在这里指定相关的域名或者端口（可使用通配符域名）
force-http-engine-hosts = *.baid.com,:8080

# 策略切换时强制断开该策略的使用连接
disconnect-on-policy-change = true

# 自定义 geoip 地理位置数据库
geoip-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-Country.mmdb

# 自定义 asn 地理位置数据库
ipasn-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-ASN.mmdb

# 指定 ssid 下流量模式切换，(default 表示默认，cellular 表示蜂窝，目前支持三种模式：rule/分流，direct/直连，proxy/代理）
# ssid-trigger = "default":rule, "cellular":rule, "OpenWrt":proxy, "OpenWrt_5G":direct

# 默认 dns 服务器，如失败回落默认 dns（默认 53 端口）
dns-server = system, 223.5.5.5, 2400:3200::1

# 设置 doh 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh-server = https://doh.pub/dns-query, https://[2400:3200:baba::1]/dns-query

# 设置 doh3 服务器（ https 或 h3 开头），支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh3-server = h3://dns.alidns.com/dns-query

# 设置 doq 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 784 端口）
doq-server = quic://dns.alidns.com:853

# 💡 指定 dns 服务器解析域名
# ssid 环境下使用特定的 dns 服务器
# 域名使用对应的 ip 地址
# 域名指定 dns 解析
# 域名指定 doh 服务器解析
[Host]
doh.pub = 120.53.53.53
dns.alidns.com = 223.5.5.5
talk.google.com = 108.177.125.188
mtalk.google.com = 108.177.125.188
openwrt.lan = server:system
openwrt.local = server:system
blog.google = server:119.29.29.29
dl.google.com = server:https://doh.pub/dns-query
dl.l.google.com = server:https://dns.alidns.com/dns-query
update.googleapis.com = server:quic://dns.alidns.com:853

# ssid
ssid:OpenWrt = server:system
ssid:OpenWrt_5G = server:https://dns.alidns.com/dns-query

# 💡 本地代理服务器
# 支持 http、https、socks5、ss、ssr、vmess、vless、trojan、wireguard、Hysteria2 等协议
[Proxy]
# wireguard 代理服务器地址：engage.cloudflareclient.com，162.159.192/193/195/204.0/24，（udp 端口:2408，备选 500、1701、4500）warp 服务器优选参考：https://gitlab.com/Misaka-blog/warp-script
☁️ Warp Client = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:88a4:fa34:70a2:56b7:ead6, private-key = "nvWCeA9If1axAV3HnZ5oCsck6aPb/+I/+yhbPorfSFU=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 162.159.192.1:2408, reserved = [17,176,6]}]
☁️ Warp Zero = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:82f0:bb8c:8f76:fdf0:e565, private-key = "CJ+a9D/TltH3gxM3hg2jdyeyctYkjw6Tym4hje+H9EQ=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 162.159.193.1:2408, reserved = [197,215,83]}]
☁️ Warp Team = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:8f21:225d:3e30:7660:78cf, private-key = "QOmt5UE2jp5s2vqYMKmjd714tBC7eteELAFRCEinJG4=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 162.159.195.1:2408, reserved = [80,73,10]}]
☁️ Warp Plus = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:89db:66c6:5265:3a6f:b92, private-key = "wEPBA9NACxZ+lfcTD0yFDrx83RNWseNw2O3yJYWeVmk=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 162.159.204.1:2408, reserved = [173,82,247]}]
☁️ Warp Cloud = VLESS, 162.159.128.118, 80, "58935f45-89c2-4b82-a77c-72eee801da09", transport = ws, path = /?ed=2048, host = cloudwork.aimeto.workers.dev, udp=true, over-tls = false
☁️ Warp Workers = VLESS, 104.19.38.18, 80, "a6857f71-33c0-4584-8772-c38160210cf2", transport = ws, path = /?ed=2048, host = sub.aimeto.workers.dev, udp=true, over-tls = false
☁️ Warp Pages = VLESS, c.aimetu.cloudns.be, 443, "58935f45-89c2-4b82-a77c-72eee801da09", transport = ws, path = /?ed=2048, host = aimeto.pages.dev, udp=true, over-tls = true, sni = aimeto.pages.dev, skip-cert-verify = true

# 💡 代理链转发，可添加节点或策略组
[Proxy Chain]
HK~CF~Warp Client = HongKong, ☁️ Warp Client, udp = true
TW~CF~Warp Zero = Taiwan, ☁️ Warp Zero, udp = true
JP~CF~Warp Team = Japan, ☁️ Warp Team, udp = true
KR~CF~Warp Plus = Korea, ☁️ Warp Plus, udp = true

# 💡 远程代理服务器（默认可直接订阅：shadowsocks、shadowsocksr、vmess、trojan、v2ray、loon、quantumult，需开启资源解析器：clash、其它）
[Remote Proxy]
Subscribe = https://sub.store/download/collection/node, parser-enabled = true ,udp = true, fast-open = false, vmess-aead = true, enabled = false

# 💡 节点筛选
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# nodeselect: 出站选择需要组合的节点
# namekeyword: 根据节点名字中是否包含相关关键词进行筛选
# nameregex: 使用正则表达式对节点的名字进行筛选
# 保留所有节点 = .*     
# 保留节点 A 或 B = ^.*(A|B)
# 保留节点有 A 或 B = (A.*B|B.*A)
# 节点不含有 A = ^(?!.*A)
# 节点有 A 但不含有 B = ^(?!.*B).*A
[Remote Filter]
本地 = NameRegex, Local, FilterKey = "(?i)"
全部 = NameRegex, FilterKey = "^(?!.*Warp).*(?i)"
香港 = NameRegex, FilterKey = "^(?!.*Warp).*(🇭🇰|港|香港|hk|HK|Hong|HongKong)"
台湾 = NameRegex, FilterKey = "^(?!.*Warp).*(🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan)"
日本 = NameRegex, FilterKey = "^(?!.*Warp).*(🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan)"
韩国 = NameRegex, FilterKey = "^(?!.*Warp).*(🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea)"
狮城 = NameRegex, FilterKey = "^(?!.*Warp).*(🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore)"
美国 = NameRegex, FilterKey = "^(?!.*Warp).*(🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America)"
国际 = NameRegex, FilterKey = "^((?!Warp|🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连|🇭🇰|港|香港|hk|HK|Hong|HongKong|🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan|🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan|🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea|🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore|🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America).)*$"
中国 = NameRegex, FilterKey = "(?i)(🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连)"

# 💡 策略组分流
# select 模式：出站选择策略组或节点
# ssid 模式：根据设定的网络环境自动切换节点/策略组
# url-test 模式：根据返回结果，选择测速最快的节点
# fallback 模式：根据顺序返回第一个可用的节点
# LoadBalance 负载均衡模式：可选三种算法：random：随机选择策略组可用节点、round-robin：轮询策略组可用节点、pcc：在 random 基础上，针对相同 host 使用同一节点
[Proxy Group]
出站选择 = select, 自动优选, 节点手选, 无线场景, 代理链接, 负载均衡, 故障转移, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, 中国节点, DIRECT, REJECT, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/pick.png
自动优选 = url-test, 全部, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/auto.png
节点手选 = select, 全部, 本地, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/node.png
无线场景 = ssid, default = 自动优选, cellular = 节点手选, "OpenWrt" = DIRECT, "OpenWrt_5G" = DIRECT, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/wireless.png
代理链接 = url-test, HK~CF~Warp Client, TW~CF~Warp Zero, JP~CF~Warp Team, KR~CF~Warp Plus, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/chain.png
负载均衡 = load-balance, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, interval = 600, algorithm = pcc, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/load.png
故障转移 = fallback, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, interval = 600, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/fallback.png
香港节点 = url-test, 香港, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/hongkong.png
台湾节点 = url-test, 台湾, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/taiwan.png
日本节点 = url-test, 日本, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/japan.png
韩国节点 = url-test, 韩国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/korea.png
狮城节点 = url-test, 狮城, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/singapore.png
美国节点 = url-test, 美国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/america.png
国际节点 = url-test, 国际, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/nations.png
中国节点 = url-test, 中国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/chinese.png
网速测试 = select, 大陆直连, 出站选择, 节点手选, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/speedtest.png
TikTok = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url =http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/tiktok.png
Telegram = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/telegram.png
Discord = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discord.png
Spotify = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/spotify.png
Netflix = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflix.png
Disney+ = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disney.png
YouTube = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtube.png
OpenAI = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/openai.png
Amazon = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/amazon.png
Facebook = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/facebook.png
谷歌服务 = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/google.png
微软服务 = select, 大陆直连, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/microsoft.png
苹果服务 = select, 大陆直连, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/apple.png
国际媒体 = select, 全球加速, 出站选择, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png
全球加速 = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/global.png
大陆媒体 = select, 大陆直连, 出站选择, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/media.png
大陆直连 = select, DIRECT, 出站选择, 节点手选, 无线场景, 中国节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/china.png
漏网之鱼 = select, 出站选择, 节点手选, 大陆直连, 广告拦截, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/final.png
广告拦截 = select, REJECT, REJECT-DROP, REJECT-NO-DROP, 大陆直连, 出站选择, 节点手选, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/adblock.png

# 💡 远程分流规则
[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Direct/Direct.list, tag = 🚥 直连修正, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Lan/Lan.list, tag = 🚥 局域网, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt, tag = ⛔ 中区广告, policy = 广告拦截, enabled = false
https://raw.githubusercontent.com/Cats-Team/AdRules/main/adrules.list, tag = ⛔ 广告规则, policy = 广告拦截, enabled = false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy.list, tag = ⛔ 隐私保护, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy_Domain.list, tag = ⛔ 隐私保护域名, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Hijacking/Hijacking.list, tag = ⛔ 反劫持, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite.list, tag = ⛔ 精简广告, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite_Domain.list, tag = ⛔ 精简广告域名, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BlockHttpDNS/BlockHttpDNS.list, tag = ⛔ HttpDNS, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/STUN/STUN.list, tag = ⛔ Stun, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, tag = 🕸️ 网速测试, policy = 网速测试, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, tag = 🎵 TikTok, policy = TikTok, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, tag = ✉️ Telegram, policy = Telegram,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Discord/Discord.list, tag = 🗣️ Discord, policy = Discord,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, tag = 🎶 Spotify, policy = Spotify, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, tag = 📽️ Netflix, policy = Netflix, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Disney/Disney.list, tag = 📼 Disney+, policy = Disney+, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, tag = 📹 YouTube, policy = YouTube, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, tag = 🤖 OpenAI, policy = OpenAI, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Amazon/Amazon.list, tag = 🛒 Amazon, policy = Amazon, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, tag = 🎭 Facebook, policy = Facebook, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, tag = 📟 谷歌服务, policy = 谷歌服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, tag = 🖥️ 微软服务, policy = 微软服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/SystemOTA/SystemOTA.list, tag = 🍎 苹果服务ota, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, tag = 🍎 苹果服务, policy = 苹果服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple_Domain.list, tag = 🍎 苹果服务域名, policy = 苹果服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, tag = 🎥 国际媒体, policy = 国际媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia_Domain.list, tag = 🎥 国际媒体域名, policy = 国际媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, tag = 🌐 全球加速, policy = 全球加速, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global_Domain.list, tag = 🌐 全球加速域名, policy = 全球加速, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMedia/ChinaMedia.list, tag = 📺 大陆媒体, policy = 大陆媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, tag = 🇨🇳 大陆直连, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China_Domain.list, tag = 🇨🇳 大陆直连域名, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPs/ChinaIPs.list, tag = 🇨🇳 大陆直连ips, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPsBGP/ChinaIPsBGP.list, tag = 🇨🇳 大陆直连bgp, policy = 大陆直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaASN/ChinaASN.list, tag = 🇨🇳 大陆直连asn, policy = 大陆直连, enabled = true

# 💡 本地分流规则
# DOMAIN：基于域名进行判断
# DOMAIN-SUFFIX：基于域名后缀进行判断
# DOMAIN-KEYWORD：基于域名关键词进行判断
# USER-AGENT：根据 http 的 user-agent 值来进行匹配，支持带有 *，？的通配符匹配
# IP-CIDR：ipv4 匹配
# IP-CIDR6：ipv6 匹配
# IP-ASN：匹配 asn 域名与 ip，代替 geoip 方案提供更准确的匹配结果
# DEST-PORT：表示特定的某个端口
# SRC-PORT：表示端口闭区间
# PROTOCOL：根据请求的协议类型规则进行匹配（3.1.7+），目前支持HTTP/HTTPS/TCP/QUIC/STUN/UDP
# AND：逻辑规则，规则内的条件都必须满足
# OR：逻辑规则，规则内的条件只需满足一项即可
# NOT：逻辑规则，必须为规则内不包含的条件
# GEOIP：ip 地理位置匹配
# final：不在规则中的请求，走指定策略
# no-resolve：（可选）跳过域名去进行 dns 解析，当请求为域名匹配到 geoip 或 ip-cidr 规则时，clash 将请求 dns 查询来检查域名的 ip 是否匹配此条规则

[Rule]
# 完整域名匹配
DOMAIN, openwrt.lan, 大陆直连

# 域名后缀匹配
DOMAIN-SUFFIX, local, 大陆直连

# 域名关键词匹配
DOMAIN-KEYWORD, localhost, 大陆直连

# url-regex 匹配
URL-REGEX, ^https?:\/\/(www|m)\.google\.cn, 谷歌服务

# user-agent 匹配
USER-AGENT, AppleTV*, 全球加速
USER-AGENT, AppleNews*, 全球加速

# 本地 ipv4 匹配规则（no-resolve 只对 ip 类型的生效，域名类型的目标地址不会进行 dns 解析后再去匹配这个规则，为了防止域名类的目标地址做无效的 dns 请求）
IP-CIDR, 10.0.0.0/8, 大陆直连, no-resolve
IP-CIDR, 100.64.0.0/10, 大陆直连, no-resolve
IP-CIDR, 127.0.0.0/8, 大陆直连, no-resolve
IP-CIDR, 172.16.0.0/12, 大陆直连, no-resolve
IP-CIDR, 192.168.0.0/16, 大陆直连, no-resolve
IP-CIDR, 224.0.0.0/24, 大陆直连, no-resolve
IP-CIDR, 169.254.0.0/16, 大陆直连, no-resolve
IP-CIDR, 183.240.197.130/32, 大陆直连, no-resolve

# 本地 ipv6 匹配规则 " no-resolve 可选 "
IP-CIDR6, fe80::/10, 大陆直连, no-resolve

# 根据 ip 服务商进行匹配 " no-resolve 可选 "
IP-ASN, 13335, 全球加速, no-resolve

# 特定的某个端口规则 " 使用 >, <, <=, >= 表示一个无穷区间大/小于或等于，如 DEST-PORT, >=443, AdBlock "
DEST-PORT, 1400, Telegram

# 表示端口区间规则
# SRC-PORT, 80-443, 大陆直连

# 根据请求的协议类型规则进行匹配（3.1.7+），目前支持HTTP/HTTPS/TCP/QUIC/STUN/UDP
PROTOCOL, STUN, 广告拦截

# AND：规则内的条件都必须满足时才会匹配" AND, ((子规则), (子规则)), PolicyName "
# AND, ((USER-AGENT, *.youtube*), (PROTOCOL, UDP), (DEST-PORT, 443)), 广告拦截
AND, ((DOMAIN-SUFFIX, bilibili.com), (PROTOCOL, UDP), (DEST-PORT, 4483)), 广告拦截
AND, ((DOMAIN-SUFFIX, bilibili.com), (PROTOCOL, UDP), (DEST-PORT, 9305)), 广告拦截
AND, ((PROTOCOL, QUIC), (DEST-PORT, 443)), 广告拦截
AND, ((PROTOCOL, UDP), (DEST-PORT, 3478)), 广告拦截
AND, ((PROTOCOL, UDP), (DEST-PORT, 19302)), 广告拦截

# OR：规则内的条件只需满足一项时匹配" OR, ((子规则), (子规则)), PolicyName "
# OR, ((DOMAIN, www.axample.com), (DOMAIN-SUFFIX, axample.com), (GEOIP, CN, no-resolve)), 大陆直连
OR, ((DOMAIN-KEYWORD, PCDN), (DOMAIN-KEYWORD, STUN)), 广告拦截
OR, ((DOMAIN-KEYWORD, HTTPDNS), (DOMAIN-KEYWORD, HTTPSDNS)), 广告拦截

# NOT：必须为规则内不包含的条件时匹配" NOT, ((子规则)), PolicyName "
# NOT, ((AND, ((DOMAIN-SUFFIX, axample.com), (DEST-PORT, 443), (GEOIP, CN)))), 大陆直连
# NOT, ((GEOIP, CN)), 全球加速

# geoip 数据库地区分流规则，已采用 "🇨🇳 china-ips-bgp-asn" 远程分流规则可以禁用
GEOIP, CN, 大陆直连

# 不在规则中的请求，走 final 指定策略
FINAL, 漏网之鱼

# 💡 本地脚本
# cron：根据设定定时触发脚本
# http-response：处理请求的脚本
# http-request：处理请求时响应的脚本
# generic：通用型脚本，以节点、策略组、规则等为参数的脚本，手动触发
# network-changed：网络环境发生变化时触发脚本
# 从 "分" 开始的 5 位 cron 写法，具体表达式可参考：https://crontab.guru
# 比如："*/30 * * * *" 代表每隔 30 分钟自动执行一次
[Script]
cron "30 21 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/ssq/ssq.js, tag = 🎫 彩票查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/lottery.png, enabled = true
cron "0 12 * * *" script-path = https://ooxx.be/js/maoyan.js, tag = 🎬 猫眼电影, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/maoyan.png, enabled = true
cron "0 10 * * *" script-path = https://ooxx.be/js/bing.js, tag = 🖼️ 必应壁纸, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/picture.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/nasa/nasapic.js, tag = 🌕 NASA每日一图, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/nasa.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/idaily/idaily.js, tag = 🌐 每日环球视野 , img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/idaily.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/oilprice.js, tag = 🛢️ 实时油价, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/oilprice.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/exchange.js, tag = 💰 汇率变化, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/exchange.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/appstore/AppMonitor.js, tag = 📱 APP监控, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/appstore.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/chavyleung/scripts/master/ithome/ithome.js, tag = 🗞️ IT之家签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/ithome.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/chavyleung/scripts/master/zaker/zaker.js, tag = 📰 扎客新闻签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/zaker.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/lowking/Scripts/master/bing/bingPoint.js, tag = 🔎 必应积分签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/bing.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/lowking/Scripts/master/ali/aliYunPanCheckIn.js, tag = ☁️ 阿里云盘签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/aliyunpan.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Script/Task/xmlySign.js, tag = 📻 喜马拉雅签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/xmly.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Script/Task/BiliBili.js, tag = 🦋 哔哩哔哩签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/bilibili.png, enabled = true
cron "30 7 * * *" script-path = https://raw.githubusercontent.com/githubdulong/Script/master/One.js, tag = 📖 每日一言, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/one.png, enabled = true
cron "30 7 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/headlines.js, tag = 📰 今日头条, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/headlines.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/Yuheng0101/X/main/Tasks/moyu.js, tag = 📆 摸鱼来啦, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/daymatter.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/histoday.js, tag = 🗓️ 历史上的今天, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/histoday.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/TributePaulWalker/Profiles/main/JavaScript/Surge/wnCalendar.js, tag = 📅 今日黄历, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/calendar.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/songyangzz/QuantumultX/master/elem/elemSign.js, tag = 👨‍🍳 饿了么签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/eleme.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/chavyleung/scripts/master/meituan/meituan.js, tag = 🦘 美团签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/meituan.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js, tag = 🐶 京东签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/jingdong.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/glados/glados.js, tag = ☁️ GlaDos签到, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/glados.png, enabled = false
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/weibo/weibotalk.js, tag = 👀 微博超话, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/weibo.png, enabled = true
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/wechatsubs/wechatsubs.js, tag = 💬 公众号监控, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/wechat.png, enabled = true
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/hotsearch/hot.js, tag = 🔥 热门监控, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/hotsearch.png, enabled = true
cron "30 6-22/5 * * *" script-path = https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/caiyun.js, tag = 🌤️ 彩云天气预报, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/caiyun.png, enabled = true
generic script-path = https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/js/1.1.1.1.panel.js, tag = ☁️ Warp节点查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/warp.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Keywos/rule/master/script/netisp/js/loon.js, tag = 🌐 入口落地查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/network.png, enabled = true
generic script-path = https://raw.githubusercontent.com/luestr/ProxyResource/main/Resource/Script/Node_detection_tool/LocationDetection.js, tag = 🗺️ 地理位置查询, timeout=10, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/geoip.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/nf_check.js, tag = 📽️ Netflix解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflixlogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/disney_check.js, tag = 📼 Disney+解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disneylogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/ytb_check.js, tag = 📹 YouTube解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtubelogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/param_check.js, tag = 🎬 Paramount解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/paramount.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/dazn_check.js, tag = 🎬 Dazn解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/dazn.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/discovery_check.js, tag = 🎬 Discovery解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discovery.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, tag = 🎥 Streaming解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png, enabled = true
http-request https:\/\/glados\.rocks\/api\/user\/checkin script-path=https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/glados/glados.js, timeout = 10, tag = ☁️ GlaDos获取, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/glados.png, enabled = false

# 💡 远程脚本
[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Fake_Vip.conf, tag = 🔐 会员解锁, enabled = false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag = 🏷️ Cookie获取, enabled = false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Task.conf, tag = ⏰ 定时任务, enabled = false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Script.conf, tag = 🗒️ 脚本合集, enabled = false
https://raw.githubusercontent.com/deezertidal/private/main/Script_Ultra.js, tag = 📄 脚本大全, enabled = false

# 💡 本地复写
# 302：返回 302 响应，以达到重定向的目的
# 307：返回 307 响应，以达到重定向的目的
# reject：直接断开连接，返回一个 404 响应
# reject-200：返回一个 200 响应体，内容为空
# reject-img：返回一个 200 响应体为，内容为 1 像素的图片
# reject-dict：返回一个 200 响应体，内容为 {} 的空 json 对象
# reject-array：返回一个 200 响应体，内容为 [] 的空 json 对象
# reject-video：返回一个 200 响应体，内容为空白的视频
# header：修改请求头，客户端不会感知重定向
# header-add：在 header 中添加一组字段
# header-del：在 header 中删除一组字段
# header-replace：替换 header 中的指定字段
# header-replace-regex：替换 header 中的正则匹配字段
[Rewrite]
^https?:\/\/(www|m)\.(g|google)\.cn https://www.google.com 302
^https?:\/\/(ditu|maps)\.google\.cn https://maps.google.com 302
# 启用 baidu 或 google 复写，需将域名 *.baidu.com, *.google.com, *.google.com.hk 添加到 mitm 解析
#^https?:\/\/(www|cn)\.bing\.com\/(s|search).+(q=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.3 Mobile/15E148 Safari/605.1.15 BingSapphire/1.0.420524001
#^https?:\/\/(www|m)\.baidu\.com\/(s|search).+(wd|word=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TraditionalTpl/1.0 ChatSearch/1.0 SearchCraft/5.8.2.10 (Baidu; P2 16.3)
#^https?:\/\/(www|m)\.baidu\.com\/(from=[^&]+)\/(s|search).+(wd|word=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 ChatSearch/1.0 SearchCraft/5.8.2.10 (Baidu; P2 16.3)
#^https?:\/\/(?!d\.pcs).*(?<!map)\.baidu\.com\/(s|search).+(wd|word=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 SP-engine/2.91.0 main%2F1.0 baiduboxapp/13.53.5.10 (Baidu; P2 16.3) NABar/1.0 themeUA=Theme/default
#^https:\/\/(www|m)\.google\.com\/(m|search|gasearch).+(q=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/308.0.615969171 Mobile/15E148 Safari/604.1
#^https:\/\/(www|m)\.google\.com\.hk\/(m|search|gasearch).+(q=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/308.0.615969171 Mobile/15E148 Safari/604.1

# 💡 插件仓库
[Plugin]
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, tag = 🎈 插件仓库, enabled = true
https://raw.githubusercontent.com/aimetu/other/main/Loon/unlock.plugin, tag = 🔐 解锁插件, enabled = true
https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Task/GetCookie.plugin, tag = 🍪 Cookie获取, enabled = true
https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/myblockads.plugin, tag = ⛔ 广告插件, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/Himalaya_remove_ads.plugin, tag = 📻 喜马拉雅去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/Weibo_remove_ads.plugin, tag = 👀 微博去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/RedPaper_remove_ads.plugin, tag = 📕 小红书去广告, enabled = true
https://raw.githubusercontent.com/BiliUniverse/ADBlock/main/modules/BiliBili.ADBlock.plugin, tag = 🎬 哔哩哔哩去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/HUPU_remove_ads.plugin, tag = 🏀 虎扑去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/smzdm_remove_ads.plugin, tag = 🛍️ 什么值得买去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/Zhihu_remove_ads.plugin, tag = 📖 知乎去广告, enabled = true
https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/amap.plugin, tag = 🗺️ 高德地图去广告, enabled = true
https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/bdmap.plugin, tag = 🗺️ 百度地图去广告, enabled = true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/tieba.plugin, tag = 📃 百度贴吧去广告, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/YouTube_remove_ads.plugin, tag = 📹 YouTube去广告, enabled = true
https://raw.githubusercontent.com/Semporia/tiktok-Unlock/master/Loon/TikTok-US.plugin, tag = 🎵 TikTok美区解锁, policy = TikTok, enabled = true
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, tag = 🍿️ YouTube字幕增强, enabled = true
https://raw.githubusercontent.com/DualSubs/Universal/main/modules/DualSubs.Universal.plugin, tag = 🍿️ Streaming字幕增强, enabled = false
https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/modules/Cloudflare.1.1.1.1.plugin, tag = ☁️ Warp节点提取, enabled = false
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, tag = 📝 重写规则, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/Remove_ads_by_keli.plugin, tag = ⛔ 广告过滤器, enabled = true
https://raw.githubusercontent.com/luestr/ProxyResource/main/Tool/Loon/Plugin/BlockAdvertisers.plugin, tag = ⛔ 广告平台拦截器, enabled = true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/adsense.plugin, tag = ⛔ 广告联盟, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/BlockHTTPDNS/BlockHTTPDNS.plugin, tag = ⛔ 域名解析, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/SafeRedirect/SafeRedirect.plugin, tag = 🔒 安全重写, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag = ✍️ 重定向规则, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Upgrade/Upgrade.plugin, tag = ⛔ APP更新检查, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingScript/AdvertisingScript.plugin, tag = ⛔ 脚本去广告, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, tag = ⛔ 复写去广告, enabled = true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag = 🗃️ BoxJs, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag = 📍 Sub-Store, policy = 中国直连, enabled = false

# 💡 解密 https 请求，需安装证书并信任
[MITM]
# 跳过服务器证书验证
skip-server-cert-verify = true

# 需解密的域名，可以使用通配符 * 或 ？ 来表示域名，以 - 开头来排除域名
hostname = *.g.cn, *.google.cn, glados.rocks

# 生成的证书参数
# ca-p12 = 
# ca-passphrase = 
