# 2025.03.15
# 官网：https://nsloon.app
# 文档：https://nsloon.app/docs/intro

# 各个模块说明「基于 loon 3.2.6 制作」
# 注意：去掉前面的注释符号 "#" 该行生效，（开启关闭参数：true/false）
# 规则逻辑：排在前面的优先级高于后面的，本地规则 > 插件规则 > 订阅规则

# 💡 通用设置
[General]
# 网络 ip 模式（ ipv4-only：仅有 ipv4, dual：自动 ipv4 & ipv6, ipv4-preferred：优先 ipv4, ipv6-preferred：优先 ipv6 ）
ip-mode = dual

# 是否开启 ipv6 流量转发 ( off：不处理ipv6流量、auto：根据当前网环境自动决定、always：强制接管tun 的ipv6流量 )
ipv6-vif = auto

# 网络接口模式 ( auto：系统分配、cellular：强制蜂窝、performance：最优网络、balance：均衡负载 )
interface-mode = auto

# 自定义 geoip 地理位置数据库
geoip-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-Country.mmdb

# 自定义 asn 地理位置数据库
ipasn-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/GeoLite2-ASN.mmdb

# 绕过路由模式（ 绕过 tun 由系统直接处理 ）
bypass-tun = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32

# 绕过代理模式（ 强制使用 tun 不会转发到 Loon 代理 ）
skip-proxy = 10.0.0.0/8, 17.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, 127.0.0.1, ::1/128, fe80::/10, *.lan, *.local, localhost

# 策略切换时强制断开该策略的使用连接
disconnect-on-policy-change = true

# 域名拦截时机 DNS、Request 二种方式，DNS：通过 dns-reject-mode 拦截请求的目的，Request：在请求阶段拦截请求
domain-reject-phase = DNS

# 域名拦截时机为 DNS 请示时三种方式：LoopbackIP：返回回环地址，NoAnswer: 返回空的 DNS 响应，NXDomain：返回域名无记录的异常代码
dns-reject-mode = LoopbackIP

# sni 域名嗅探
sni-sniffing = true

# 指定 url 进行直连网络的连通性检测
internet-test-url = http://www.qualcomm.cn/generate_204

# 指定 url 进行代理服务器的连通性检测
proxy-test-url = http://www.gstatic.com/generate_204

# 节点测速时的超时 "秒" 数
test-timeout = 3

# 连续失败几次后进行节点切换
switch-node-after-failure-times = 3

# 资源解析器连接
resource-parser = https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-parser.loon.min.js

# 配置的域名不会使用 fakeip 进行映射，返回真实的 ip
real-ip = *.msftncsi.com, *.msftconnecttest.com, cable.auth.com, captive.apple.com, *.cmpassport.com, id6.me, open.e.189.cn, mob.com, hmrz.wo.cn, auth.wosms.cn, mdn.open.wo.cn, id.mail.wo.cn, opencloud.wostore.cn, nishub1.10010.com, enrichgw.10010.com, localhost.*.qq.com, localhost.*.weixin.qq.com

# 劫持自定义 dns 服务，返回假的 ip 地址响应（*:0/所有，*:53/所有53端口，8.8.8.8/所有该地址的查询）
hijack-dns = *:53

# 禁用 stun 协议的 udp 数据，阻止 webrtc 泄露真实的 ip 
disable-stun = true

# 当规则匹配的策略不支持 udp 中继时，使用以下策略进行 udp 数据转发
udp-fallback-mode = REJECT

# 是否开启局域网代理访问
allow-wifi-access = false

# 开启局域网 http 代理服务端口
wifi-access-http-port = 8899

# 开启局域网 socket5 代理服务端口
wifi-access-socket5-port = 8898

# 网络自动切换模式，default：默认网络，cellular：蜂窝网络，ssid：wifi 网络 ( 目前支持三种模式：rule/自动分流，direct/全局直连，proxy/全局代理 ）
# ssid-trigger = "default":rule, "cellular":rule, "OpenWrt":direct, "OpenWrt_5G":proxy

# 默认 dns 服务器，如失败回落默认 dns（默认 53 端口）
dns-server = 223.5.5.5, 119.29.29.29

# 设置 doh 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh-server = https://doh.pub/dns-query

# 设置 doh3 服务器（ https 或 h3 开头），支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh3-server = https://dns.alidns.com/dns-query

# 设置 doq 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 784 端口）
doq-server = quic://dns.alidns.com:853

# 💡 指定 dns 服务器解析域名
[Host]
my.router = router.local
*.home.arpa = ip-mode:dual
talk.google.com = 108.177.125.188
mtalk.google.com = 108.177.125.188
blog.google = server:208.67.222.222
dl.google.com = server:https://dns.opendns.com/dns-query
dl.l.google.com = server:https://dns.opendns.com/dns-query
update.googleapis.com = server:quic://dns.alidns.com:853

# ssid
ssid:OpenWrt = server:https://dns.alidns.com/dns-query

# 💡 本地代理服务器
[Proxy]
☁️ Warp Plus = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:89db:66c6:5265:3a6f:b92, private-key = "wEPBA9NACxZ+lfcTD0yFDrx83RNWseNw2O3yJYWeVmk=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 162.159.195.5:2408, reserved = [173,82,247]}]

# 💡 代理链转发，可添加节点或策略组
[Proxy Chain]
CF*Warp Plus = 故障转移, ☁️ Warp Plus, udp = true

# 💡 远程代理服务器
[Remote Proxy]
Subscribe = https://sub.store/download/collection/node, parser-enabled = true ,udp = true, fast-open = false, vmess-aead = true, enabled = false

# 💡 节点筛选
[Remote Filter]
本地 = NameRegex, Local, FilterKey = "(?i)"
全部 = NameRegex, FilterKey = "^(?!.*Warp).*(?i)"
香港 = NameRegex, FilterKey = "^(?!.*Warp).*(🇭🇰|港|香港|hk|HK|Hong|HongKong)"
台湾 = NameRegex, FilterKey = "^(?!.*Warp).*(🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan)"
日本 = NameRegex, FilterKey = "^(?!.*Warp).*(🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan)"
韩国 = NameRegex, FilterKey = "^(?!.*Warp).*(🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea)"
狮城 = NameRegex, FilterKey = "^(?!.*Warp).*(🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore)"
美国 = NameRegex, FilterKey = "^(?!.*Warp).*(🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America)"
国际 = NameRegex, FilterKey = "^((?!Warp|🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连|🇭🇰|港|香港|hk|HK|Hong|HongKong|🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan|🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan|🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea|🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore|🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America).)*$"
中国 = NameRegex, FilterKey = "(?i)(🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连)"

# 💡 策略组分流
[Proxy Group]
出站选择 = select, 自动优选, 节点手选, 无线场景, 故障转移, 负载均衡, 代理链接, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, 中国节点, DIRECT, REJECT, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/pick.png
自动优选 = url-test, 全部, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/auto.png
节点手选 = select, 全部, 本地, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/node.png
无线场景 = ssid, default = 自动优选, cellular = 节点手选, "OpenWrt" = DIRECT, "OpenWrt_5G" = DIRECT, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/wireless.png
故障转移 = fallback, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, interval = 600, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/fallback.png
负载均衡 = load-balance, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, interval = 600, algorithm = pcc, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/load.png
代理链接 = select, CF*Warp Plus, url = http://cp.cloudflare.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/chain.png
香港节点 = url-test, 香港, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/hongkong.png
台湾节点 = url-test, 台湾, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/taiwan.png
日本节点 = url-test, 日本, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/japan.png
韩国节点 = url-test, 韩国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/korea.png
狮城节点 = url-test, 狮城, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/singapore.png
美国节点 = url-test, 美国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/america.png
国际节点 = url-test, 国际, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/nations.png
中国节点 = url-test, 中国, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/chinese.png
网速测试 = select, 中国直连, 出站选择, 节点手选, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/speedtest.png
TikTok = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, 中国直连, url =http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/tiktok.png
Telegram = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/telegram.png
Discord = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discord.png
Spotify = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/spotify.png
Netflix = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflix.png
Disney+ = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disney.png
YouTube = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtube.png
OpenAI = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/openai.png
Amazon = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/amazon.png
Facebook = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/facebook.png
谷歌服务 = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/google.png
微软服务 = select, 中国直连, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/microsoft.png
苹果服务 = select, 中国直连, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/apple.png
国际媒体 = select, 全球加速, 出站选择, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png
全球加速 = select, 出站选择, 节点手选, 香港节点, 台湾节点, 日本节点, 韩国节点, 狮城节点, 美国节点, 国际节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/global.png
中国媒体 = select, 中国直连, 出站选择, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/media.png
中国直连 = select, DIRECT, 出站选择, 节点手选, 无线场景, 中国节点, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/china.png
漏网之鱼 = select, 出站选择, 节点手选, 中国直连, 广告拦截, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/final.png
广告拦截 = select, REJECT, REJECT-DROP, REJECT-NO-DROP, 中国直连, 出站选择, 节点手选, url = http://www.gstatic.com/generate_204, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/adblock.png

# 💡 远程分流规则
[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Direct/Direct.list, tag = 🚥 直连修正, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Lan/Lan.list, tag = 🚥 局域网, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-surge.txt, tag = ⛔ 中区广告, policy = 广告拦截, enabled = false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy.list, tag = ⛔ 隐私保护, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy_Domain.list, tag = ⛔ 隐私保护域名, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Hijacking/Hijacking.list, tag = ⛔ 反劫持, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite.list, tag = ⛔ 精简广告, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite_Domain.list, tag = ⛔ 精简广告域名, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/BlockHttpDNS/BlockHttpDNS.list, tag = ⛔ HttpDNS, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, tag = 🕸️ 网速测试, policy = 网速测试, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, tag = 🎵 TikTok, policy = TikTok, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, tag = ✉️ Telegram, policy = Telegram,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Discord/Discord.list, tag = 🗣️ Discord, policy = Discord,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, tag = 🎶 Spotify, policy = Spotify, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, tag = 📽️ Netflix, policy = Netflix, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Disney/Disney.list, tag = 📼 Disney+, policy = Disney+, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, tag = 📹 YouTube, policy = YouTube, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, tag = 🤖 OpenAI, policy = OpenAI, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Amazon/Amazon.list, tag = 🛒 Amazon, policy = Amazon, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, tag = 🎭 Facebook, policy = Facebook, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, tag = 📟 谷歌服务, policy = 谷歌服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, tag = 🖥️ 微软服务, policy = 微软服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/SystemOTA/SystemOTA.list, tag = 🍎 苹果服务ota, policy = 广告拦截, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, tag = 🍎 苹果服务, policy = 苹果服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple_Domain.list, tag = 🍎 苹果服务域名, policy = 苹果服务, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, tag = 🎥 国际媒体, policy = 国际媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia_Domain.list, tag = 🎥 国际媒体域名, policy = 国际媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, tag = 🌐 全球加速, policy = 全球加速, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global_Domain.list, tag = 🌐 全球加速域名, policy = 全球加速, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMedia/ChinaMedia.list, tag = 📺 中国媒体, policy = 中国媒体, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, tag = 🇨🇳 中国直连, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China_Domain.list, tag = 🇨🇳 中国直连域名, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPs/ChinaIPs.list, tag = 🇨🇳 中国直连ips, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPsBGP/ChinaIPsBGP.list, tag = 🇨🇳 中国直连bgp, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaASN/ChinaASN.list, tag = 🇨🇳 中国直连asn, policy = 中国直连, enabled = true

[Rule]
# 完整域名匹配
DOMAIN, router.local, 中国直连

# 域名后缀匹配
DOMAIN-SUFFIX, home.arpa, 中国直连

# 域名关键词匹配
DOMAIN-KEYWORD, localhost, 中国直连

# url-regex 匹配
URL-REGEX, ^https?:\/\/(www|m)\.google\.cn, 谷歌服务

# user-agent 匹配
USER-AGENT, AppleTV*, 全球加速
USER-AGENT, AppleNews*, 全球加速

# 本地 ipv4 匹配规则
IP-CIDR, 10.0.0.0/8, 中国直连, no-resolve
IP-CIDR, 100.64.0.0/10, 中国直连, no-resolve
IP-CIDR, 127.0.0.0/8, 中国直连, no-resolve
IP-CIDR, 172.16.0.0/12, 中国直连, no-resolve
IP-CIDR, 192.168.0.0/16, 中国直连, no-resolve
IP-CIDR, 224.0.0.0/24, 中国直连, no-resolve
IP-CIDR, 169.254.0.0/16, 中国直连, no-resolve
IP-CIDR, 183.240.197.130/32, 中国直连, no-resolve

# 本地 ipv6 匹配规则
IP-CIDR6, fe80::/10, 中国直连, no-resolve

# 根据 ip 服务商进行匹配
IP-ASN, 13335, 全球加速, no-resolve

# 特定的某个端口规则
DEST-PORT, 1400, Telegram

# 表示端口区间规则
# SRC-PORT, 80-443, 中国直连

# 根据请求的协议类型规则进行匹配
PROTOCOL, STUN, 广告拦截

# AND：规则内的条件都必须满足时才会匹配
AND, ((DOMAIN-SUFFIX, bilibili.com), (PROTOCOL, QUIC), (DEST-PORT, 4483)), 广告拦截
AND, ((DOMAIN-SUFFIX, bilibili.com), (PROTOCOL, QUIC), (DEST-PORT, 9305)), 广告拦截
AND, ((PROTOCOL, UDP), (DEST-PORT, 3478)), 广告拦截
AND, ((PROTOCOL, UDP), (DEST-PORT, 19302)), 广告拦截

# OR：规则内的条件只需满足一项时匹配
OR, ((DOMAIN-KEYWORD, pdns), (DOMAIN-KEYWORD, p2p)), 广告拦截
OR, ((DOMAIN-KEYWORD, httpdns), (DOMAIN-KEYWORD, httpsdns)), 广告拦截

# NOT：必须为规则内不包含的条件时匹配
# NOT, ((AND, ((DOMAIN-SUFFIX, axample.com), (DEST-PORT, 443), (GEOIP, CN)))), 中国直连
# NOT, ((GEOIP, CN, no-resolve)), 全球加速

# geoip 数据库地区分流规则
GEOIP, CN, 中国直连, no-resolve

# 不在规则中的请求
FINAL, 漏网之鱼

# 💡 本地脚本
[Script]
cron "30 21 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/ssq/ssq.js, tag = 🎫 彩票查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/lottery.png, enabled = true
cron "0 12 * * *" script-path = https://ooxx.be/js/maoyan.js, tag = 🎬 猫眼电影, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/maoyan.png, enabled = true
cron "0 10 * * *" script-path = https://ooxx.be/js/bing.js, tag = 🖼️ 必应壁纸, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/picture.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/nasa/nasapic.js, tag = 🌕 NASA每日一图, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/nasa.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/idaily/idaily.js, tag = 🌐 每日环球视野 , img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/idaily.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/oilprice.js, tag = 🛢️ 实时油价, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/oilprice.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/exchange.js, tag = 💰 汇率变化, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/exchange.png, enabled = true
cron "30 7 * * *" script-path = https://raw.githubusercontent.com/githubdulong/Script/master/One.js, tag = 📖 每日一言, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/one.png, enabled = true
cron "30 7 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/headlines.js, tag = 📰 今日头条, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/headlines.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/Yuheng0101/X/main/Tasks/moyu.js, tag = 📆 摸鱼来啦, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/daymatter.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/aimetu/other/main/Script/histoday.js, tag = 🗓️ 历史上的今天, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/histoday.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/TributePaulWalker/Profiles/main/JavaScript/Surge/wnCalendar.js, tag = 📅 今日黄历, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/calendar.png, enabled = true
generic script-path = https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/js/1.1.1.1.panel.js, tag = ☁️ Warp节点查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/warp.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Keywos/rule/master/script/netisp/js/loon.js, tag = 🌐 入口落地查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/network.png, enabled = true
generic script-path = https://kelee.one/Resource/Script/Node_detection_tool/LocationDetection.js, tag = 🗺️ 地理位置查询, timeout=10, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/geoip.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/nf_check.js, tag = 📽️ Netflix解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflixlogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/disney_check.js, tag = 📼 Disney+解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disneylogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/ytb_check.js, tag = 📹 YouTube解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtubelogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/param_check.js, tag = 🎬 Paramount解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/paramount.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/dazn_check.js, tag = 🎬 Dazn解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/dazn.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/discovery_check.js, tag = 🎬 Discovery解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discovery.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, tag = 🎥 Streaming解锁查询, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png, enabled = true

# 💡 远程脚本
[Remote Script]
https://raw.githubusercontent.com/fmz200/wool_scripts/main/Loon/script/tasks.scripts, tag = ⏰ 定时任务, enabled = false
https://raw.githubusercontent.com/deezertidal/private/main/Script_Ultra.js, tag = 📄 脚本大全, enabled = false

[Rewrite]
^https?:\/\/(www|m)\.(g|google)\.cn https://www.google.com 302
^https?:\/\/(ditu|maps)\.google\.cn https://maps.google.com 302

# 💡 插件仓库
[Plugin]
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, tag = 🎈 插件仓库, enabled = false
https://raw.githubusercontent.com/fmz200/wool_scripts/main/Loon/plugin/blockAds.plugin, tag = ⛔️ BlockAds, enabled = false
https://raw.githubusercontent.com/fmz200/wool_scripts/main/Loon/plugin/cookies.plugin, tag = 🍪 Cookie, enabled = false
https://raw.githubusercontent.com/Semporia/tiktok-Unlock/master/Loon/TikTok.plugin, tag = 🎵 TikTok解锁, policy = TikTok, enabled = true
https://github.com/DualSubs/YouTube/releases/latest/download/DualSubs.YouTube.plugin, tag = 🍿️ YouTube字幕增强, enabled = true
https://github.com/DualSubs/Universal/releases/latest/download/DualSubs.Universal.plugin, tag = 🍿️ Streaming字幕增强, enabled = false
https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/modules/Cloudflare.1.1.1.1.plugin, tag = ☁️ Warp节点提取, enabled = false
https://raw.githubusercontent.com/app2smile/rules/master/plugin/adsense.plugin, tag = ⛔ 广告联盟, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/BlockHTTPDNS/BlockHTTPDNS.plugin, tag = ⛔ 域名解析, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/SafeRedirect/SafeRedirect.plugin, tag = 🔒 安全重写, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag = ✍️ 定向规则, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Upgrade/Upgrade.plugin, tag = ⛔ 屏蔽检查, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingScript/AdvertisingScript.plugin, tag = ⛔ 广告脚本, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, tag = ⛔ 广告复写, enabled = true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag = 🗃️ BoxJs, policy = 中国直连, enabled = true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag = 📍 Sub-Store, policy = 中国直连, enabled = false

# 💡 解密 https 请求，需安装证书并信任
[MITM]
# 跳过服务器证书验证
skip-server-cert-verify = true

# 需解密的域名，可以使用通配符 * 或 ？ 来表示域名，以 - 开头来排除域名
hostname = *.g.cn, *.google.cn

# 生成的证书参数
# ca-p12 = 
# ca-passphrase = 
