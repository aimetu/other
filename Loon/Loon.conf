# 2024.01.08
# 配置参考：https://loon0x00.github.io/LoonManual

# 各个模块说明「基于 loon 3.1.3 制作」
# 注意：去掉前面的注释符号 "#" 该行生效
# 规则逻辑：排在前面的优先级高于后面的，本地规则 > 插件规则 > 订阅规则

# other 设置补充说明
# 在「高级设置」里「geoip」的「使用自定义数据库」填写下面链接
# https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb

# 图标订阅「更多 -ui 配置 - 图标集」
# aimetu 108*108 图标
# https://raw.githubusercontent.com/aimetu/icons/main/icons.json

# http 本地服务器「浏览器打开」
# boxjs 订阅脚本挂载 substore 本地订阅转换
# http://boxjs.com
# https://sub.store

# boxjs 订阅脚本
# https://qxnav.com/rules/QuantumultX/qixin.boxjs.json
# https://raw.githubusercontent.com/xream/scripts/main/boxjs/boxjs.json

# 网络连通性检查使用的 url
# http://www.google.com/generate_204
# http://www.gstatic.com/generate_204
# http://www.qualcomm.cn/generate_204
# http://cp.cloudflare.com/generate_204
# http://captive.apple.com/generate_204

# 💡通用设置
[General]
# ipv6 支持开关 true/false
ipv6 = false

# 网络接口模式( auto：系统分配、cellular：强制蜂窝、performance：最优网络、balance：均衡负载 )
interface-mode = auto

# 跳过代理或者 ip 段，不经过代理
skip-proxy = 10.0.0.0/8, 17.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16

# 指定 ip 段范围绕过 tun 旁路由
bypass-tun = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.18.0.0/15, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32

# 配置的域名不会使用 fakeip 进行映射，返回真实的 ip
real-ip = *.lan, *.local, localhost, *.msftncsi.com, *.msftconnecttest.com, cable.auth.com, captive.apple.com, *.cmpassport.com, id6.me, open.e.189.cn, auth.wosms.cn, mdn.open.wo.cn, opencloud.wostore.cn, localhost.*.qq.com, localhost.*.weixin.qq.com

# 资源解析器连接
resource-parser =  https://github.com/sub-store-org/Sub-Store/releases/latest/download/sub-store-parser.loon.min.js

# 指定 url 进行网络连接检测
# internet-test-url = http://www.qualcomm.cn/generate_204

# 指定 url 进行代理连接检测
proxy-test-url = http://www.gstatic.com/generate_204

# 节点测速时的超时 "秒" 数
test-timeout = 3

# 连续失败几次后进行节点切换
switch-node-after-failure-times = 3

# 是否开启局域网代理访问 true/false
allow-wifi-access = false

# 开启局域网 http 代理服务端口
wifi-access-http-port = 7222

# 开启局域网 socket5 代理服务端口
wifi-access-socket5-port = 7221

# sni 域名嗅探开关 true/false
sni-sniffing = true

# stun 协议的 udp 数据，可以有效解决 webrtc 的 ip 泄露开关 true/false
disable-stun = true

# 禁用 udp 协议的一些端口，阻止 webrtc 泄露真实 ip
disable-udp-ports = 443

# tun 模式下默认只解析 80 端口的 http 请求（8080 表示解析所有 8080 端口，0 表示解析所有端口），如请求的不是 80 端口，则可以在这里指定相关的域名或者端口（可使用通配符域名）
force-http-engine-hosts = *.baid.com,:8080

# 策略切换时强制断开该策略的使用连接开关 true/false
disconnect-on-policy-change = true

# geoip 地理位置数据库
geoip-url = https://raw.githubusercontent.com/Hackl0us/GeoIP2-CN/release/Country.mmdb

# 指定 ssid 下流量模式切换，(default 表示默认，cellular 表示蜂窝，目前支持三种模式：rule/分流，direct/直连，proxy/代理）
# ssid-trigger = "default":rule, "cellular":rule, "OpenWrt":proxy, "OpenWrt_5G":direct

# 默认 dns 服务器（ doq > doh3 > doh 优先级查询，如失败回落默认 dns ）"system" 会导致系统 dns 泄露，所以未启用（默认 53 端口）
dns-server = 223.5.5.5, 119.29.29.29

# 设置 doh 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh-server = https://dns.alidns.com/dns-query, https://doh.pub/dns-query

# 设置 doh3 服务器（ https 或 h3 开头），支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 443 端口）
doh3-server = https://dns.alidns.com/dns-query

# 设置 doq 服务器，支持 doq > doh3 > doh 混合使用，并发请求选取最优结果（默认 784 端口）
doq-server = quic://dns.alidns.com:853

# 💡指定 dns 服务器解析域名
# 1.ssid 环境下使用特定的 dns 服务器
# 2.域名使用对应的 ip 地址
# 3.域名指定 dns 解析
# 4.域名指定 doh 服务器解析
[Host]
openwrt.lan = server:system
blog.google = server:119.29.29.29
doh.pub = 1.12.12.12
dns.alidns.com = 223.5.5.5
dns.opendns.com = 208.67.222.222
talk.google.com = 108.177.125.188
mtalk.google.com = 108.177.125.188
dl.google.com = server:https://doh.pub/dns-query
dl.l.google.com = server:https://dns.alidns.com/dns-query
update.googleapis.com = server:quic://dns.alidns.com:853

# ssid
ssid:OpenWrt = server:system
ssid:OpenWrt_5G = server:https://dns.alidns.com/dns-query

# 💡本地代理服务器
# 支持 http、https、socks5、ss、ssr、vmess、vless、trojan、wireguard、Hysteria2 等协议
[Proxy]
# wireguard 代理服务器地址：engage.cloudflareclient.com，162.159.192/193/195.0/24，（udp 端口:2408，备选 500、1701、4500）warp 服务器优选参考：https://gitlab.com/Misaka-blog/warp-script
Warp Client = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:88a4:fa34:70a2:56b7:ead6, private-key = "nvWCeA9If1axAV3HnZ5oCsck6aPb/+I/+yhbPorfSFU=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = engage.cloudflareclient.com:2408, reserved = [17,176,6]}]
Warp Teams = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:82ef:2622:a722:9a2d:2205, private-key = "mIjlNihVwtsjeUVQen0uhcE0tPFOVKSrpSNWU7liTlU=", mtu = 1280, dns = 1.1.1.1, dnsv6 = 2606:4700:4700::1111, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = engage.nanocat.cloud:2408, reserved = [247,126,89]}]
Warp Team = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:8f21:225d:3e30:7660:78cf, private-key = "QOmt5UE2jp5s2vqYMKmjd714tBC7eteELAFRCEinJG4=", mtu = 1280, dns = 1.0.0.1, dnsv6 = 2606:4700:4700::1001, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = engage.nanocat.me:2408, reserved = [80,73,10]}]
Warp Plus = wireguard, interface-ip = 172.16.0.2, interface-ipv6 = 2606:4700:110:89db:66c6:5265:3a6f:b92, private-key = "wEPBA9NACxZ+lfcTD0yFDrx83RNWseNw2O3yJYWeVmk=", mtu = 1280, dns = 1.0.0.1, dnsv6 = 2606:4700:4700::1001, keepalive = 45, peers = [{public-key="bmXOC+F1FxEMF9dyiK2H5/1SUtzH0JuVo51h2wPfgyo=", allowed-ips = "0.0.0.0/0, ::/0", endpoint = 188.114.97.229:2506, reserved = [173,82,247]}]

# 💡代理链转发，可添加节点或策略组
[Proxy Chain]
HK-Warp Client = HongKong, Warp Client, udp = true
TW-Warp Teams = Taiwan, Warp Teams, udp = true
JP-Warp Team = Japan, Warp Team, udp = true
SG-Warp Plus = Singapore, Warp Plus, udp = true

# 💡远程代理服务器（默认可直接订阅：shadowsocks、shadowrocket、v2ray、loon、quantumultx、surge，需开启资源解析器：clash、其它）
[Remote Proxy]
Subscribe = https://sub.store/download/collection/node, parser-enabled = true ,udp = true, fast-open = false, vmess-aead = true, enabled = false

# 💡节点筛选
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# nodeselect: 手动选择需要组合的节点
# namekeyword: 根据节点名字中是否包含相关关键词进行筛选
# nameregex: 使用正则表达式对节点的名字进行筛选
# 保留所有节点 = .*     
# 保留节点 A 或 B = ^.*(A|B)
# 保留节点有 A 或 B = (A.*B|B.*A)
# 节点不含有 A = ^(?!.*A)
# 节点有A但不含 B = ^(?!.*?B).*A
[Remote Filter]
ALL = NameRegex, FilterKey = "(?i)"
HK = NameRegex, FilterKey = "(?i)(🇭🇰|港|香港|hk|HK|Hong|HongKong)"
TW = NameRegex, FilterKey = "(?i)(🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan)"
JP = NameRegex, FilterKey = "(?i)(🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan)"
KR = NameRegex, FilterKey = "(?i)(🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea)"
SG = NameRegex, FilterKey = "(?i)(🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore)"
US = NameRegex, FilterKey = "(?i)(🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America)"
UN = NameRegex, FilterKey = "^((?!🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连|🇭🇰|港|香港|hk|HK|Hong|HongKong|🇹🇼|台|台湾|台北|臺灣|tw|TW|Tai|Taiwan|🇯🇵|日|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|jp|JP|Japan|🇰🇷|韩|韓|韩国|韓國|首尔|朝鲜|kr|KR|KOR|Korea|South Korea|SouthKorea|🇸🇬|新|狮|新加坡|狮城|sg|SG|Singapore|🇺🇸|美|美国|美國|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|us|US|United States|UnitedStates|America).)*$"
CN = NameRegex, FilterKey = "(?i)(🇨🇳|中国|大陆|国内|回国|cn|CN|CHINA|电信|移动|联通|腾讯|阿里|教育|校园|直连)"

# 💡策略组分流
# select 模式：手动选择策略组或节点
# ssid 模式：根据设定的网络环境自动切换节点/策略组
# url-test 模式：根据返回结果，选择测速最快的节点
# fallback 模式：根据顺序返回第一个可用的节点
# LoadBalance 负载均衡模式：可选三种算法：random：随机选择策略组可用节点、round-robin：轮询策略组可用节点、pcc：在 random 基础上，针对相同 host 使用同一节点
[Proxy Group]
Pick = select, Auto, Node, Wireless, Proxy Chain, Load Balance, Fallback, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, Chinese, DIRECT, REJECT, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/pick.png
Auto = url-test, ALL, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/auto.png
Node = select, ALL, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/node.png
Wireless = ssid, default = Auto, cellular = Node, "OpenWrt" = DIRECT, "OpenWrt_5G" = DIRECT, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/wireless.png
Proxy Chain = url-test, HK-Warp Client, TW-Warp Teams, JP-Warp Team, SG-Warp Plus, , url = http://cp.cloudflare.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/chain.png
Load Balance = load-balance, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, url = http://www.gstatic.com/generate_204, interval = 600, algorithm = pcc, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/load.png
Fallback = fallback, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, url = http://www.gstatic.com/generate_204,interval = 600, max-timeout = 3000, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/fallback.png
HongKong = url-test, HK, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/hongkong.png
Taiwan = url-test, TW, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/taiwan.png
Japan = url-test, JP, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/japan.png
Korea = url-test, KR, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/korea.png
Singapore = url-test, SG, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/singapore.png
America = url-test, US, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/america.png
Nations = url-test, UN, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/nations.png
Chinese = url-test, CN, url = http://www.gstatic.com/generate_204, interval = 600, tolerance = 0, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/chinese.png
Speedtest = select, China, Pick, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/speedtest.png
TikTok = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/tiktok.png
Telegram = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/telegram.png
Discord = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discord.png
Spotify = select, Pick, HongKong, Taiwan,Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/spotify.png
Netflix = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflix.png
Disney+ = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disney.png
YouTube = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtube.png
OpenAI = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/openai.png
Amazon = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/amazon.png
Facebook = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/facebook.png
Google = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/google.png
Microsoft = select, China, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/microsoft.png
Apple = select, China, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/apple.png
Global Media = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png
Global = select, Pick, HongKong, Taiwan, Japan, Korea, Singapore, America, Nations, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/global.png
China Media = select, China, Pick, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/media.png
China = select, DIRECT, Pick, Node, Wireless, Chinese, AdBlock, img-url = https://raw.githubusercontent.com/aimetu/icons/main/map/china.png
Final = select, Pick, China, AdBlock, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/final.png
AdBlock = select, REJECT, DIRECT, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/adblock.png

# 💡远程分流规则
[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Direct/Direct.list, tag = 🚥 Direct, policy = China, enabled = true
https://anti-ad.net/surge.txt, tag = ⛔ Anti.ad, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/Cats-Team/AdRules/main/ad-domains.txt, tag = ⛔ AdRules, policy = AdBlock, enabled = false
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy.list, tag = ⛔ Privacy, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Privacy/Privacy_Domain.list, tag = ⛔ Privacy.domain, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Hijacking/Hijacking.list, tag = ⛔ Hijacking, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite.list, tag = ⛔ AdvertisingLite, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite_Domain.list, tag = ⛔ AdvertisingLite.domain, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Speedtest/Speedtest.list, tag = 🕸️ Speedtest, policy = Speedtest, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, tag = 🎵 TikTok, policy = TikTok, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, tag = ✉️ Telegram, policy = Telegram,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Discord/Discord.list, tag = 🗣️ Discord, policy = Discord,, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, tag = 🎶 Spotify, policy = Spotify, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Netflix/Netflix.list, tag = 📽️ Netflix, policy = Netflix, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Disney/Disney.list, tag = 📼 Disney+, policy = Disney+, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/YouTube/YouTube.list, tag = 📹 YouTube, policy = YouTube, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/OpenAI/OpenAI.list, tag = 🤖 OpenAI, policy = OpenAI, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Amazon/Amazon.list, tag = 🛒 Amazon, policy = Amazon, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, tag = 🎭 Facebook, policy = Facebook, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, tag = 📟 Google, policy = Google, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, tag = 🖥️ Microsoft, policy = Microsoft, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/SystemOTA/SystemOTA.list, tag = 🍎 Apple.ota, policy = AdBlock, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, tag = 🍎 Apple, policy = Apple, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple_Domain.list, tag = 🍎 Apple.domain, policy = Apple, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia.list, tag = 🎥 Global Media, policy = Global Media, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GlobalMedia/GlobalMedia_Domain.list, tag = 🎥 Global Media.domain, policy = Global Media, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global.list, tag = 🌐 Global, policy = Global, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Global/Global_Domain.list, tag = 🌐 Global.domain, policy = Global, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaMedia/ChinaMedia.list, tag = 📺 China Media, policy = China Media, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China.list, tag = 🇨🇳 China, policy = China, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/China/China_Domain.list, tag = 🇨🇳 China.domain, policy = China, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPs/ChinaIPs.list, tag = 🇨🇳 China.ips, policy = China, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/ChinaIPsBGP/ChinaIPsBGP.list, tag = 🇨🇳 China.ipsbgp, policy = China, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/QuantumultX/ChinaASN/ChinaASN.list, tag = 🇨🇳 China.asn, policy = China, enabled = true

# 💡本地分流规则
# DOMAIN：基于域名进行判断
# DOMAIN-SUFFIX：基于域名后缀进行判断
# DOMAIN-KEYWORD：基于域名关键词进行判断
# USER-AGENT：根据 http 的 user-agent 值来进行匹配，支持带有 *，？的通配符匹配
# IP-CIDR：ipv4 匹配
# IP-CIDR6：ipv6 匹配
# GEOIP：ip 地理位置匹配
# IP-ASN：匹配 asn 域名与 ip，代替 geoip 方案提供更准确的匹配结果
# final：不在规则中的请求，走指定策略
[Rule]
# 完整域名匹配
DOMAIN, ad.cyapi.cn, AdBlock
DOMAIN, ad.21cn.com, AdBlock
DOMAIN, ad.k.21cn.com, AdBlock
DOMAIN, admarket.21cn.com, AdBlock
DOMAIN, adshows.21cn.com, AdBlock
DOMAIN, mssdk-bu.bytedance.com, AdBlock

# 域名后缀匹配
DOMAIN-SUFFIX, adx.appicad.net, AdBlock
DOMAIN-SUFFIX, m1.ad.10010.com, AdBlock

# 域名关键词匹配
DOMAIN-KEYWORD, stun, AdBlock
DOMAIN-KEYWORD, pcdn, AdBlock

# url-regex 匹配
URL-REGEX, ^http://google\.com, Google

# user-agent 匹配
USER-AGENT, pinterest*, Global

# 本地 ipv4 匹配规则（no-resolve 只对 ip 类型的生效，域名类型的目标地址不会进行 dns 解析后再去匹配这个规则，为了防止域名类的目标地址做无效的 dns 请求）
IP-CIDR, 10.0.0.0/8, DIRECT, no-resolve
IP-CIDR, 100.64.0.0/10, DIRECT, no-resolve
IP-CIDR, 127.0.0.0/8, DIRECT, no-resolve
IP-CIDR, 172.16.0.0/12, DIRECT, no-resolve
IP-CIDR, 192.168.0.0/16, DIRECT, no-resolve
IP-CIDR, 224.0.0.0/24, DIRECT, no-resolve

# 本地 ipv6 匹配规则
IP-CIDR6, fe80::/10, DIRECT,no-resolve

# geoip 数据库地区分流规则，已采用 "🇨🇳 china-ips-bgp-asn" 远程分流规则可以禁用
# GEOIP, cn, China

# 不在规则中的请求，走 final 指定策略
FINAL, Final

# 💡本地脚本
# cron：根据设定定时触发脚本
# http-response：处理请求的脚本
# http-request：处理请求时响应的脚本
# generic：通用型脚本，以节点、策略组、规则等为参数的脚本，手动触发
# network-changed：网络环境发生变化时触发脚本
# 从 "分" 开始的 5 位 cron 写法，具体表达式可参考：https://crontab.guru
# 比如："*/30 * * * *" 代表每隔 30 分钟自动执行一次
[Script]
cron "30 21 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/ssq/ssq.js, tag = 🎫 Lottery, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/lottery.png, enabled = true
cron "0 12 * * *" script-path = https://ooxx.be/js/maoyan.js, tag = 🎬 MaoYan, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/maoyan.png, enabled = true
cron "0 12 * * *" script-path = https://ooxx.be/js/bing.js, tag = 🖼️ BingWallpaper, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/bing.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/exchange.js, tag = 💰 Exchange, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/exchange.png, enabled = true
cron "0 10 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/appstore/AppMonitor.js, tag = 📱 AppMonitor, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/appstore.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/githubdulong/Script/master/One.js, tag = 📖 One, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/one.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/chavyleung/scripts/master/zaker/zaker.js, tag = 📰 ZaKer, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/zaker.png, enabled = true
cron "0 9 * * *" script-path = https://raw.githubusercontent.com/lowking/Scripts/master/bing/bingPoint.js, tag = 🔎 Bing, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/bing.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/lowking/Scripts/master/ali/aliYunPanCheckIn.js, tag = ☁️ AliYunPan, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/aliyunpan.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Script/Task/xmlySign.js, tag = 📻 Ximalaya, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/xmly.png, enabled = true
cron "0 8 * * *" script-path = https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Script/Task/BiliBili.js, tag = 🦋 BiliBili, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/bilibili.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/nasa/nasapic.js, tag = 🌕 Nasa, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/nasa.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/idaily/idaily.js, tag = 🌐 iDaily, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/idaily.png, enabled = true
cron "0 7 * * *" script-path = https://raw.githubusercontent.com/TributePaulWalker/Profiles/main/JavaScript/Surge/wnCalendar.js, tag = 📅 Calendar, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/calendar.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/songyangzz/QuantumultX/master/elem/elemSign.js, tag = 👨‍🍳 Eleme, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/eleme.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/chavyleung/scripts/master/meituan/meituan.js, tag = 🦘 MeiTuan, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/meituan.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/NobyDa/Script/master/JD-DailyBonus/JD_DailyBonus.js, tag = 🐶 JingDong, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/jingdong.png, enabled = true
cron "0 6 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/glados/glados.js, tag = ☁️ GLaDos, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/glados.png, enabled = false
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/weibo/weibotalk.js, tag = 👀 WeiBo, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/weibo.png, enabled = true
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/wechatsubs/wechatsubs.js, tag = 💬 WeChatSubs, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/wechat.png, enabled = true
cron "30 7-22/7 * * *" script-path = https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/hotsearch/hot.js, tag = 🔥 HotSearch, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/hotsearch.png, enabled = true
cron "30 6-22/5 * * *" script-path = https://raw.githubusercontent.com/Peng-YM/QuanX/master/Tasks/caiyun.js, tag = 🌤️ CaiYun, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/caiyun.png, enabled = true
generic script-path = https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/js/Cloudflare.1.1.1.1.panel.js, tag = ☁️ Warp, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/warp.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Keywos/rule/main/loon/Netisp.js, tag = 🌐 Netisp, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/network.png, enabled = true
generic script-path = https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Resource/Script/Node_detection_tool/LocationDetection.js, tag = 🗺️ GeoIP, timeout=10, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/geoip.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/nf_check.js, tag = 📽️ Netflix, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/netflixlogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/disney_check.js, tag = 📼 Disney, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/disneylogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/ytb_check.js, tag = 📹 YouTube, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/youtubelogo.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/param_check.js, tag = 🎬 Paramount, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/paramount.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/dazn_check.js, tag = 🎬 Dazn, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/dazn.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/discovery_check.js, tag = 🎬 Discovery, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/discovery.png, enabled = true
generic script-path = https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, tag = 🎥 Streaming, img-url = https://raw.githubusercontent.com/aimetu/icons/main/other/streaming.png, enabled = true
http-request https:\/\/glados\.rocks\/api\/user\/checkin script-path=https://raw.githubusercontent.com/evilbutcher/QuantumultX/master/check_in/glados/glados.js, timeout = 10, tag = ☁️ GLaDos, img-url = https://raw.githubusercontent.com/aimetu/icons/main/logo/glados.png, enabled = false

# 💡远程脚本
[Remote Script]
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Fake_Vip.conf, tag = 🔐 Vip, enabled = true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Cookie.conf, tag = 🏷️ Cookie, enabled = false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Task.conf, tag = ⏰ Task, enabled = false
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Script.conf, tag = 🗒️ Script, enabled = false
https://raw.githubusercontent.com/deezertidal/private/main/Script_Ultra.js, tag = 📄 Script.ultra, enabled = false

# 💡本地复写
# 302：返回 302 响应，以达到重定向的目的
# 307：返回 307 响应，以达到重定向的目的
# reject：直接断开连接，返回一个 404 响应
# reject-200：返回一个 200 响应体，内容为空
# reject-img：返回一个 200 响应体为，内容为 1 像素的图片
# reject-dict：返回一个 200 响应体，内容为 {} 的空 json 对象
# reject-array：返回一个 200 响应体，内容为 [] 的空 json 对象
# reject-video：返回一个 200 响应体，内容为空白的视频
# header：修改请求头，客户端不会感知重定向
# header-add：在 header 中添加一组字段
# header-del：在 header 中删除一组字段
# header-replace：替换 header 中的指定字段
# header-replace-regex：替换 header 中的正则匹配字段
[Rewrite]
^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302
^https?:\/\/(ditu|maps).google\.cn https://maps.google.com 302
^https?:\/\/(?!d\.pcs).*(?<!map)\.baidu\.com\/(s|search).+(wd|word=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 TraditionalTpl/1.0 ChatSearch/1.0 SearchCraft/5.5.0.21 (Baidu; P2 16.3)
#^https?:\/\/(?!d\.pcs).*(?<!map)\.baidu\.com\/(s|search).+(wd|word=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148 SP-engine/2.84.0 main%2F1.0 baiduboxapp/13.46.2.10 (Baidu; P2 16.3)NABar/1.0
^https:\/\/www\.google\.com\/(m|search).+(q=[^&]+) header-replace User-Agent Mozilla/5.0 (iPhone; CPU iPhone OS 16_3 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) GSA/291.0.582931352 Mobile/15E148 Safari/604.1

# 💡插件仓库
[Plugin]
https://raw.githubusercontent.com/Peng-YM/Loon-Gallery/master/loon-gallery.plugin, tag = 🎈 Plugin, enabled = true
https://raw.githubusercontent.com/aimetu/other/main/Loon/add.plugin, tag = 🔐 Add, enabled = true
https://raw.githubusercontent.com/ClydeTime/Quantumult/main/Task/GetCookie.plugin, tag = 🍪 GetCookie, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Himalaya_remove_ads.plugin, tag = 📻 Ximalaya.ad, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Weibo_remove_ads.plugin, tag = 👀 WeiBo.ad, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/RedPaper_remove_ads.plugin, tag = 📕 XiaoHongShu.ad, enabled = true
https://raw.githubusercontent.com/BiliUniverse/ADBlock/main/modules/BiliBili.ADBlock.plugin, tag = 🎬 BiliBili.ad, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/smzdm_remove_ads.plugin, tag = 🛍️ Smzdm.ad, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Zhihu_remove_ads.plugin, tag = 📖 ZhiHu.ad, enabled = true
https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/amap.plugin, tag = 🗺️ Amap.ad, enabled = true
https://raw.githubusercontent.com/RuCu6/Loon/main/Plugins/bdmap.plugin, tag = 🗺️ BDmap.ad, enabled = true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/tieba.plugin, tag = 📃 TieBa.ad, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/YouTube_remove_ads.plugin, tag = 📹 YouTube.ad, enabled = true
https://raw.githubusercontent.com/Semporia/tiktok-Unlock/master/Loon/TikTok-US.plugin, tag = 🎵 TikTok, enabled = true
https://raw.githubusercontent.com/DualSubs/YouTube/main/modules/DualSubs.YouTube.plugin, tag = 🍿️ YouTube, enabled = true
https://raw.githubusercontent.com/DualSubs/Universal/main/modules/DualSubs.Universal.plugin, tag = 🍿️ Streaming, enabled = false
https://raw.githubusercontent.com/VirgilClyne/Cloudflare/main/modules/Cloudflare.1.1.1.1.plugin, tag = ☁️ Cloudflare, enabled = false
https://raw.githubusercontent.com/GeQ1an/Rules/master/Loon/Rewrite/Rewrite.plugin, tag = 📝 Rewrite, enabled = true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Remove_ads_by_keli.plugin, tag = ⛔ StartUp.ad, enabled = true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/adsense.plugin, tag = ⛔ AdSense, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/BlockHTTPDNS/BlockHTTPDNS.plugin, tag = ⛔ BlockHTTPDNS, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/SafeRedirect/SafeRedirect.plugin, tag = 🔒 SafeRedirect, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Redirect/Redirect.plugin, tag = ✍️ Redirect, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/Upgrade/Upgrade.plugin, tag = ⛔ Upgrade, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingScript/AdvertisingScript.plugin, tag = ⛔ AdvertisingScript, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rewrite/Loon/AdvertisingLite/AdvertisingLite.plugin, tag = ⛔ AdvertisingLite, enabled = true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/AdvertisingLite/AdvertisingLite_MITM.plugin, tag = 🚥 AdvertisingLite.mitm, enabled = true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, tag = 🗃️ BoxJs, policy=DIRECT, enabled = true
https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/config/Loon.plugin, tag = 📍 Substore, policy=DIRECT, enabled = false

# 💡解密 https 请求，需安装证书并信任
[MITM]
# 跳过服务器证书验证开关 true/false
skip-server-cert-verify = true

# 需解密的域名，可以使用通配符 * 或 ？ 来表示域名，以 - 开头来排除域名
hostname = g.cn, *.google.cn, glados.rocks

# 生成的证书参数
# ca-p12 = 
# ca-passphrase = 
